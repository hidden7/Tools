<Window
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:vrClusterManager"
		xmlns:conv="clr-namespace:vrClusterManager.ValueConversion"
		xmlns:uictrl="clr-namespace:vrClusterManager.UIControl"
		xmlns:scm ="clr-namespace:System.ComponentModel;assembly=WindowsBase"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
		x:Class="vrClusterManager.MainWindow"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:fa="http://schemas.fontawesome.io/icons/"
		mc:Ignorable="d"
		Title="VRCluster config" 
		Loaded="Window_Loaded"
		MinWidth="800"
		MinHeight="800" Icon="Icons/Icon.ico">

	<Window.CommandBindings>
		<CommandBinding Command="Save" Executed="SaveConfig" />
		<CommandBinding Command="SaveAs" Executed="SaveAsConfig" />
		<CommandBinding Command="Open" Executed="OpenConfig" />
		<CommandBinding Command="Close" Executed="Exit" />
		<CommandBinding Command="New" Executed="NewConfig" />
	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Command="Save" Key="S" Modifiers="Control" />
		<KeyBinding Command="SaveAs" Key="S" Modifiers="Control+Alt" />
		<KeyBinding Command="Open" Key="O" Modifiers="Control" />
		<KeyBinding Command="Close" Key="X" Modifiers="Control" />
		<KeyBinding Command="New" Key="N" Modifiers="Control" />
	</Window.InputBindings>

	<Window.Resources>



		<!--Converters-->
		<BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

		<conv:InverseBooleanConverter x:Key="BoolInverseConverter" />
		<conv:BoolToVerticalBorderConverter x:Key="BoolToVerticalConverter" />
		<conv:BoolToHorizontalBorderConverter x:Key="BoolToHorizontalConverter" />
		<conv:SizeConverter x:Key="SizeConverter" />

		<conv:ValueConverterGroup x:Key="InvertBoolToVerticalConverter">
			<conv:InverseBooleanConverter/>
			<conv:BoolToVerticalBorderConverter/>
		</conv:ValueConverterGroup>

		<conv:ValueConverterGroup x:Key="InvertBoolToHorizontalConverter">
			<conv:InverseBooleanConverter />
			<conv:BoolToHorizontalBorderConverter />
		</conv:ValueConverterGroup>


		<sys:String x:Key="emailRegex">^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@
        [a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]
        *[a-zA-Z]$</sys:String>

		<CollectionViewSource x:Key="cvsInputTrackers" Source="{Binding inputs}" Filter="CollectionViewSource_Filter" IsLiveFilteringRequested="True">

		</CollectionViewSource>
		<ObjectDataProvider x:Key="dataFromEnum" 
                        MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="local:LogCatValue" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>


		<Style x:Key="CommonStyle" TargetType="{x:Type FrameworkElement}"/>
		<Style x:Key="TabContent" TargetType="{x:Type Grid}">
			<Setter Property="Height" Value="430" />
			<Setter Property="Background" Value="#1C1C1C" />
		</Style>

		<Style x:Key="ControlsStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#3F3F46" />
			<Setter Property="Margin" Value="2" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="1" />


		</Style>
		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="Background" Value="#FF333337" />
		</Style>
		<Style x:Key="CustomTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="Background" Value="#FF333337" />
		</Style>
		<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0" 
                        Padding="10,5,15,5" Margin="0,0,0,0" >
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#0079CB"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

		</Style>
		<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="FlowDirection" Value="LeftToRight" />
			<Setter Property="HorizontalAlignment" Value="Left" />

		</Style>

		<Style TargetType="{x:Type Menu}" >
			<Setter Property="Background" Value="#2D2D30" />
		</Style>
		<Style TargetType="{x:Type MenuItem}" >
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Margin" Value="0"/>
		</Style>
		<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}" >
			<Setter Property="MinWidth" Value="40" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>
		<Style x:Key="SizeTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="70" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>
		<Style x:Key="NameTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="150" />
			<Setter Property="HorizontalAlignment" Value="Left" />
		</Style>
		<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="Width" Value="150" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
		</Style>
		<Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ControlsStyle}">

			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="Height" Value="300" />
		</Style>
		<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="Height" Value="300" />
		</Style>
		<Style TargetType="{x:Type uictrl:UnselectableListBox}" BasedOn="{StaticResource ControlsStyle}">
			<Setter Property="MinWidth" Value="100" />
			<Setter Property="MaxWidth" Value="200" />
			<Setter Property="Height" Value="300" />
		</Style>

		<Style TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="WhiteSmoke" />
		</Style>


		<ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
			<Grid Margin="10,0">
				<DockPanel>


					<ContentPresenter x:Name="content" ContentSource="Header" />
				</DockPanel>
				<Popup x:Name="PART_Popup" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">

					<Border BorderThickness="0" BorderBrush="White" Background="#2D2D30">
						<ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="CustomCheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
			<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="21" Width="21" Margin="5,0">
					<Grid x:Name="markGrid" Margin="0,0,3,0" Width="21" Height="21">
						<Path x:Name="optionMark" Data="M19.43043,2.3829644 L9.1518969,17.722808 8.8077779,17.722808 0,10.116135 2.4867883,6.8598807 8.2883854,11.859559 16.232593,2.9722871E-05 19.43043,2.3829644 z" Fill="#0079CB" Margin="0,0,2.3,2.3" Opacity="0" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Height="18.7" Width="18.7"/>
						<Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
					</Grid>
				</Border>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,3,2,-3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="HasContent" Value="True">
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Padding" Value="4,-1,0,0"/>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
					<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
					<Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
					<Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
					<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="{x:Null}">
					<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
					<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="SubTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Foreground" Value="WhiteSmoke" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="Border" BorderThickness="0" 
                            Padding="5,2,5,2" >
							<ContentPresenter x:Name="ContentSite" ContentSource="Header" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="#0079CB"/>
								<Setter TargetName="Border" Property="Background" Value="#252527"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
								<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

		</Style>
		<Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
			<Setter Property="Padding" Value="2"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
								<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--ScrollViewer-->
		<Style TargetType="{x:Type ScrollViewer}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid Background="#FF3F3F46">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="0" />
							<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
							<ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
							<Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Scrollbar Thumbs-->
		<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid x:Name="Grid">
							<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
							<Border x:Name="Rectangle1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Tag" Value="Horizontal">
								<Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
								<Setter TargetName="Rectangle1" Property="Height" Value="7" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--ScrollBars-->
		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
			<Setter Property="Foreground" Value="#8C8C8C" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Width" Value="8" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="0.00001*" />
							</Grid.RowDefinitions>

							<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
								<Track.Thumb>
									<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
								</Track.DecreaseRepeatButton>
							</Track>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
								<Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
							</Trigger>
							<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
								<Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
							</Trigger>

							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="Orientation" Value="Horizontal">
								<Setter TargetName="GridRoot" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter TargetName="PART_Track" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter Property="Width" Value="Auto" />
								<Setter Property="Height" Value="8" />
								<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
								<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
								<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>

	<Grid Background="#2D2D30">

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Menu x:Name="menuMain" Foreground="WhiteSmoke" FocusManager.IsFocusScope="False" Grid.Row="0" Margin="0" VerticalAlignment="Top" IsMainMenu="True">
			<Menu.ItemsPanel>
				<ItemsPanelTemplate>
					<DockPanel HorizontalAlignment="Stretch"/>
				</ItemsPanelTemplate>
			</Menu.ItemsPanel>
			<MenuItem Header="File" HorizontalAlignment="Left" Template="{DynamicResource MenuItemControlTemplate}">
				<MenuItem Header="_New..." Command="New" IsEnabled="False" />
				<Separator />
				<MenuItem Header="_Open..." Command="Open" IsEnabled="False" />
				<Separator />
				<MenuItem Header="_Save" Command="Save" IsEnabled="False"/>
				<MenuItem x:Name="menuSaveAs" Header="_Save As..."  InputGestureText="Ctrl+Alt+S" Command="SaveAs" IsEnabled="False"/>
				<Separator />
				<MenuItem Header="_Exit" Command="Close" InputGestureText="Ctrl+X"/>
			</MenuItem>
			<MenuItem Header="About" HorizontalAlignment="Right" Click="About_Click" Template="{DynamicResource MenuItemControlTemplate}" />

		</Menu>

		<TabControl Grid.Row="1" x:Name="tabControl" VerticalAlignment="Top" MinWidth="500" MinHeight="200" Background="#FF2D2D30" BorderThickness="0,3,0,0" BorderBrush="#0079CB" Margin="10" Padding="0" Style="{DynamicResource TabControlStyle}" >
			<TabItem Header="Cluster nodes" IsEnabled="False" Visibility="Collapsed">
				<Grid Style="{StaticResource TabContent}" >
					<Grid Grid.Row="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid Grid.Column="0" x:Name="clusterNodesListPanel">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ListBox Grid.Row="0" x:Name="nodesListBox" SelectedItem="{Binding selectedNode, Mode=TwoWay}" ItemsSource="{Binding clusterNodes}" DisplayMemberPath="id" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Height="Auto" ToolTip="Cluster Nodes List" SelectedIndex="0" MaxWidth="400"  />
							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button Grid.Column="0" x:Name="addNodeBtn" Content="Add" Click="addNodeButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new node to cluster" />
								<Button Grid.Column="1" x:Name="deleteNodeBtn" Content="Delete" Click="deleteNodeButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected node" />
							</Grid>
						</Grid>
						<Grid Grid.Column="1">
							<Grid.Style>
								<Style TargetType="{x:Type Grid}">
									<Setter Property="IsEnabled" Value="True" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding selectedNode}" Value="{x:Null}" >
											<Setter Property="IsEnabled" Value="False" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid Grid.Row="0" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="5" />
									</Grid.RowDefinitions>
									<CheckBox x:Name="isMasterCheckBox" Grid.Column="0" Content="Master Node" Checked="isMasterCheckBox_Checked" IsChecked="{Binding selectedNode.isMaster}" Template="{DynamicResource CustomCheckBoxControlTemplate}" />
									<Grid Grid.Column="1" Visibility="{Binding selectedNode.isMaster, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<Label Grid.Column="0" Content="CS Port:" ToolTip="Cluster sync port, number" />
										<TextBox x:Name="portCsTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding portCs, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Client port, number"/>
										<Label Grid.Column="2" Content="SS Port:" ToolTip="Swap sync port, number" />
										<TextBox x:Name="portSsTb" Grid.Column="3" Style="{DynamicResource SizeTB}" Text="{Binding portSs, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Server port, number" />
									</Grid>
								</Grid>
								<Grid Grid.Row="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column = "0" Width="85" >
										<Label Content="Node ID" />
									</Grid>
									<Grid Grid.Column="1">
										<TextBox x:Name="nodeIdTb" Style="{DynamicResource NameTB}" Text="{Binding selectedNode.id, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Node ID, you can use letters, numbers and _" />
									</Grid>
								</Grid>
								<Grid Grid.Row="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column = "0" Width="85">
										<Label Content="Node Address" />
									</Grid>
									<Grid Grid.Column="1">
										<TextBox x:Name="nodeAddressTb" Style="{DynamicResource NameTB}" Text="{Binding selectedNode.address, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Selected node IP address" />
									</Grid>
								</Grid>
								<Grid Grid.Row="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column = "0" Width="85" >
										<Label Content="Screen" />
									</Grid>
									<Grid Grid.Column="1">
										<ComboBox x:Name="screensCb" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding screens}"  SelectedItem="{Binding selectedNode.screen}"  DisplayMemberPath="id" ToolTip="Select screen, required"/>


									</Grid>
								</Grid>
								<Grid Grid.Row="4">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column = "0" Width="85" >
										<Label Content="Viewport" />
									</Grid>
									<Grid Grid.Column="1">
										<ComboBox x:Name="viewportsCb" ItemsSource="{Binding viewports}" DisplayMemberPath="id" SelectedItem="{Binding selectedNode.viewport}" Template="{DynamicResource ComboBoxTemplate}" ToolTip="Select viewport, required"/>


									</Grid>
								</Grid>
								<Grid Grid.Row="5">
									<CheckBox x:Name="isWindowed"  Content="Windowed" IsChecked="{Binding selectedNode.isWindowed}" Template="{DynamicResource CustomCheckBoxControlTemplate}" HorizontalAlignment="Left" Margin="2,2,0,2" />
								</Grid>
								<Grid Grid.Row="6" Visibility="{Binding selectedNode.isWindowed, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Row="0" Content="Window parameters" />
									<Grid Grid.Row="1" Margin="20,0,0,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="5" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<Label Grid.Column="0" Grid.Row="2" Content="X" ToolTip="X coordinate of top-left corner in pixels" />
										<TextBox x:Name="windowXTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedNode.winX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="X coordinate of top-left corner in pixels" />
										<Label Grid.Column="0" Grid.Row="3" Content="Y" ToolTip="Y coordinate of top-left corner in pixels"/>
										<TextBox x:Name="windowYTb" Grid.Column="1" Grid.Row="3" Style="{DynamicResource SizeTB}" Text="{Binding selectedNode.winY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Y coordinate of top-left corner in pixels"  />
										<Label Grid.Column="0" Grid.Row="4" Content="Width" />
										<TextBox x:Name="windowWidthTb" Grid.Column="1" Grid.Row="4" Style="{DynamicResource SizeTB}" Text="{Binding selectedNode.resX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Width of viewport in pixels" />
										<Label Grid.Column="0" Grid.Row="5" Content="Height"/>
										<TextBox x:Name="windowHeightTb" Grid.Column="1" Grid.Row="5" Style="{DynamicResource SizeTB}" Text="{Binding selectedNode.resY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Height of viewport in pixels" />
									</Grid>
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Viewports" Margin="3,0,-3,0" IsEnabled="False" Visibility="Collapsed">
				<Grid Style="{StaticResource TabContent}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto"/>
						<ColumnDefinition Width="auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0" x:Name="viewportsListPanel">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ListBox Grid.Row="0" x:Name="viewportsListBox" ItemsSource="{Binding viewports}" DisplayMemberPath="id" SelectedItem="{Binding selectedViewport, Mode=TwoWay}" Height="Auto" SelectedIndex="0" MaxWidth="400"/>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Button Grid.Column="0" x:Name="addViewportBtn" Content="Add" Click="addViewportButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new viewport"/>
							<Button Grid.Column="1" x:Name="deleteViewportBtn" Content="Delete" Click="deleteViewportButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected viewport"/>
						</Grid>
					</Grid>
					<Grid Grid.Column="1">
						<Grid.Style>
							<Style TargetType="{x:Type Grid}">
								<Setter Property="IsEnabled" Value="True" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding selectedViewport}" Value="{x:Null}" >
										<Setter Property="IsEnabled" Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="5" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Label Grid.Column="0" Grid.Row="0" Content="Viewport ID" />
							<TextBox x:Name="viewportIdTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource NameTB}" Text="{Binding selectedViewport.id, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" AutomationProperties.HelpText="help text" ToolTip="Viewport ID, you can use letters, numbers and _" />
							<Label Grid.Column="0" Grid.Row="2" Content="X" ToolTip="X coordinate of top-left corner in pixels" />
							<TextBox x:Name="viewportXTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.x, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="X coordinate of top-left corner in pixels" />
							<Label Grid.Column="0" Grid.Row="3" Content="Y" ToolTip="Y coordinate of top-left corner in pixels"/>
							<TextBox x:Name="viewportYTb" Grid.Column="1" Grid.Row="3" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.y, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Y coordinate of top-left corner in pixels"  />
							<Label Grid.Column="0" Grid.Row="4" Content="Width" />
							<TextBox x:Name="viewportWidthTb" Grid.Column="1" Grid.Row="4" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.width, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Width of viewport in pixels" />
							<Label Grid.Column="0" Grid.Row="5" Content="Height"/>
							<TextBox x:Name="viewportHeightTb" Grid.Column="1" Grid.Row="5" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.height, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Height of viewport in pixels" />
						</Grid>
						<Grid Grid.Row="2">
							<CheckBox x:Name="isVerticalFlip" Content="Vertical Flip" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding selectedViewport.verticalFlip}" />
						</Grid>
						<Grid Grid.Row="3">
							<CheckBox x:Name="isHorizontalFlip" Content="Horizontal Flip" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding selectedViewport.horizontalFlip}" />
						</Grid>
						<Grid Grid.Row="4">
							<!--<CheckBox x:Name="isWindowed" Content="Windowed" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding selectedViewport.isWindowed}" />-->
						</Grid>
						<Label Grid.Row="5" Content="Full screen resolution(Is used only for preview)" />
						<Grid Grid.Row="6" x:Name="screenResolutionGrid" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Label Grid.Column="0" Grid.Row="0" Content="Width" />
							<TextBox x:Name="fullScreenWidthTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding mainScreenWidth}" ToolTip="Width of phisical screen in pixels" />
							<Label Grid.Column="0" Grid.Row="1" Content="Height"/>
							<TextBox x:Name="fullScreenHeightTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding mainScreenHeight}" ToolTip="Height of phisical screen in pixels" />

						</Grid>
					</Grid>
					<Viewbox x:Name="previewVb" Grid.Column="2" Stretch="Uniform" Margin="5">
						<Canvas x:Name="viewportCanvas" Background="#FF3F3F46" Width="{Binding canvasSize}" Height="{Binding canvasSize}" ClipToBounds="True" >

							<Canvas Canvas.Left="{Binding mainScreenOffsetX}" Canvas.Top="{Binding mainScreenOffsetY}" Width="{Binding mainScreenWidth}" Height="{Binding mainScreenHeight}" Background="#FF0FBDBD" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0" >

								<Border x:Name="previewViewport" TextBlock.TextAlignment="Center" Background="#7FB15656" Width="{Binding selectedViewport.width}" Height="{Binding selectedViewport.height}" Canvas.Left="{Binding selectedViewport.x}" Canvas.Top="{Binding selectedViewport.y}" SnapsToDevicePixels="True" >
									<Grid>
										<Viewbox Stretch="Uniform" MaxHeight="{Binding DataContext.textZone, ElementName=viewportCanvas}" HorizontalAlignment="{Binding selectedViewport.horizontalFlip, Converter={StaticResource InvertBoolToHorizontalConverter}}" VerticalAlignment="{Binding selectedViewport.verticalFlip, Converter={StaticResource InvertBoolToVerticalConverter}}"  OpacityMask="Black" Opacity="0.5" >
											<TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center"  >
												<TextBlock.Text>
													<MultiBinding StringFormat="({0},{1})">
														<Binding Path="selectedViewport.x"/>
														<Binding Path="selectedViewport.y"/>
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
										</Viewbox>
										<Viewbox MinHeight="{Binding DataContext.textZone, ElementName=viewportCanvas}" Stretch="Uniform">
											<TextBlock Text="{Binding selectedViewport.id}" HorizontalAlignment="Center" VerticalAlignment="Center"  />
										</Viewbox>
										<Viewbox  Stretch="Uniform" MaxHeight="{Binding DataContext.textZone, ElementName=viewportCanvas}" VerticalAlignment="{Binding selectedViewport.verticalFlip, Converter={StaticResource BoolToVerticalConverter}}" HorizontalAlignment="{Binding selectedViewport.horizontalFlip, Converter={StaticResource BoolToHorizontalConverter}}" OpacityMask="Black" Opacity="0.5" >
											<TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center"  >
												<TextBlock.Text>
													<MultiBinding StringFormat="({0},{1})">
														<Binding Path="selectedViewport.width"/>
														<Binding Path="selectedViewport.height"/>
													</MultiBinding>
												</TextBlock.Text>
											</TextBlock>
										</Viewbox>
									</Grid>
								</Border>
							</Canvas>
						</Canvas>
					</Viewbox>
				</Grid>
			</TabItem>
			<TabItem Header="Scene nodes" IsEnabled="False" Visibility="Collapsed">
				<Grid Style="{StaticResource TabContent}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<TreeView x:Name="sceneNodesTreeView" Grid.Row="0" SelectedItemChanged="sceneNodesTreeView_SelectedItemChanged" MouseDown="treeView_MouseDown" MouseMove="treeView_MouseMove" Focusable="True" MouseUp="sceneNodesTreeView_MouseUp" AllowDrop="True" ItemsSource="{Binding sceneNodesView}" Height="Auto" ToolTip="List of empty hierarchy nodes (transforms)" MaxWidth="600" IsTabStop="False" >
							<TreeView.ItemContainerStyle>
								<Style TargetType="{x:Type TreeViewItem}">
									<Setter Property="IsSelected" Value="{Binding isSelected, Mode=TwoWay}" />
									<Setter Property="IsExpanded" Value="true" />
									<Setter Property="Foreground" Value="WhiteSmoke" />
									<Setter Property="Padding" Value="1,1,5,1" />
									<EventSetter Event="UIElement.DragOver"  Handler="treeView_DragOver"/>
									<EventSetter Event="UIElement.Drop" Handler="treeView_Drop"/>
									<EventSetter Event="UIElement.MouseMove" Handler="treeView_MouseMove"/>
									<EventSetter Event="UIElement.MouseDown" Handler="treeView_MouseDown"/>
								</Style>
							</TreeView.ItemContainerStyle>
							<TreeView.ItemTemplate>
								<HierarchicalDataTemplate ItemsSource="{Binding children}">
									<TextBlock Text="{Binding node.id}" />
								</HierarchicalDataTemplate>
							</TreeView.ItemTemplate>
						</TreeView>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Button x:Name="addSceneNodeBtn" Grid.Column="0" Content="Add" Click="addSceneNode_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new empty hierarchy node (transform)" />
							<Button x:Name="deleteSceneNodeBtn" Grid.Column="1" Content="Delete" Click="deleteSceneNode_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected empty hierarchy node (transform)" />
						</Grid>
					</Grid>
					<Grid Grid.Column="1">
						<Grid.Style>
							<Style TargetType="{x:Type Grid}">
								<Setter Property="IsEnabled" Value="True" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding selectedSceneNodeView}" Value="{x:Null}" >
										<Setter Property="IsEnabled" Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Grid Grid.Row="0" >
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Label Grid.Column="0" Grid.Row="0"  Content="Scene Node ID"/>
							<TextBox x:Name="sceneNodeIdTb" Grid.Column="1" Grid.Row="0" Text="{Binding selectedSceneNodeView.node.id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{DynamicResource NameTB}" ToolTip="ID of empty hierarchy node (transform), you can use letters, numbers and _" />
							<Label Grid.Column="0" Grid.Row="1" Content="Tracker ID"  />
							<ComboBox Grid.Row="1" Grid.Column="1" x:Name="sceneNodeTrackerCb" Template="{DynamicResource ComboBoxTemplate}" DisplayMemberPath="id" ItemsSource="{Binding Source={StaticResource cvsInputTrackers}}" SelectedItem="{Binding selectedSceneNodeView.node.tracker}" ToolTip="Select Tracker ID, not required" />
							<Label Grid.Column="0" Grid.Row="2" Content="Tracker Channel" />
							<TextBox x:Name="sceneNodeTrackerChTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource NameTB}" Text="{Binding selectedSceneNodeView.node.trackerCh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Tracker channel, number, not required"/>
						</Grid>
						<Grid Grid.Row="1" HorizontalAlignment="Left" >
							<Grid.RowDefinitions >
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid Grid.Row="1" >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Location" />
								<Grid Grid.Row="1" Margin="20,0,0,0" >
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
									<TextBox x:Name="sceneNodeLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="X coordinate in meters, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
									<TextBox x:Name="sceneNodeLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Y coordinate in meters, floating point number" />
									<Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
									<TextBox x:Name="sceneNodeLocationZTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationZ, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Z coordinate in meters, floating point number" />
								</Grid>
							</Grid>
							<Grid Grid.Row="3">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Rotation" />
								<Grid Grid.Row="1" Margin="20,0,0,0" >
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
									<TextBox x:Name="sceneNodeRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationP, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Pitch in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
									<TextBox x:Name="sceneNodeRotationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Yaw in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
									<TextBox x:Name="sceneNodeRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationR, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Roll in degrees, floating point number" />
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Screens" IsEnabled="False" IsSelected="True" Visibility="Collapsed">
				<Grid Style="{StaticResource TabContent}" >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0" x:Name="screensListPanel">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ListBox Grid.Row="0" x:Name="screensListBox" ItemsSource="{Binding screens}" DisplayMemberPath="id" SelectedItem="{Binding selectedScreen, Mode=TwoWay}" Height="Auto" ToolTip="List of Screens" SelectedIndex="0" MaxWidth="400"/>

						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Button Grid.Column="0" x:Name="addScreenBtn" Content="Add" Click="addScreenButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new screen"/>
							<Button Grid.Column="1" x:Name="deleteScreenBtn" Content="Delete" Click="deleteScreenButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected screen"/>
						</Grid>
					</Grid>
					<Grid Grid.Column="1" >
						<Grid.Style>
							<Style TargetType="{x:Type Grid}">
								<Setter Property="IsEnabled" Value="True" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding selectedScreen}" Value="{x:Null}" >
										<Setter Property="IsEnabled" Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Label Grid.Column="0" Grid.Row="0" Content="Screen ID"/>
							<TextBox x:Name="screenIdTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource NameTB}" Text="{Binding selectedScreen.id, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Screen ID, you can use letters, numbers and _" />
							<Label Grid.Column="0" Grid.Row="1" Content="Parent Scene Node" />
							<ComboBox x:Name="parentWallsCb" Grid.Column="1" Grid.Row="1" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding sceneNodes}" DisplayMemberPath="id" SelectedItem="{Binding selectedScreen.parentWall}" ToolTip="Select parent scene node" />
						</Grid>
						<Grid Grid.Row="1" HorizontalAlignment="Left" >
							<Grid.RowDefinitions>
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid  Grid.Row="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Screen Location Parameters" />
								<Grid Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
									<TextBox x:Name="screenLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="X coordinate in meters, floating point number"/>
									<Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
									<TextBox x:Name="screenLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Y coordinate in meters, floating point number" />
									<Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
									<TextBox x:Name="screenLocationZTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationZ, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Z coordinate in meters, floating point number" />
								</Grid>
							</Grid>
							<Grid Grid.Row="3">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Screen Rotation Parameters" />
								<Grid  Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
									<TextBox x:Name="screenRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationP, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Pitch in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
									<TextBox x:Name="screenRotationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Yaw in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
									<TextBox x:Name="screenRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationR, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Roll in degrees, floating point number" />
								</Grid>
							</Grid>
							<Grid Grid.Row="5">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label  Grid.Row="0" Content="Screen Size Parameters" />
								<Grid Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X size in meters, floating point number" />
									<TextBox x:Name="screenSizeXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.sizeX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="X size in meters, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y size in meters, floating point number" />
									<TextBox x:Name="screenSizeYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.sizeY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Y size in meters, floating point number" />
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Inputs" IsEnabled="False" Visibility="Collapsed" >
				<Grid Style="{StaticResource TabContent}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ListBox x:Name="inputsListBox" Grid.Row="0" ItemsSource="{Binding inputs}" DisplayMemberPath="id" SelectedItem="{Binding selectedInput, Mode=TwoWay}" Height="Auto" ToolTip="List of input devices" SelectedIndex="0" MaxWidth="400" />
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Button x:Name="addInputBtn" Grid.Column="0" Content="Add" Click="addInputBtn_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new input device"/>
							<Button x:Name="delInputBtn" Grid.Column="1" Content="Delete" Click="delInputBtn_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected input device"/>
						</Grid>
					</Grid>
					<Grid Grid.Column="1">
						<Grid.Style>
							<Style TargetType="{x:Type Grid}">
								<Setter Property="IsEnabled" Value="True" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding selectedInput}" Value="{x:Null}" >
										<Setter Property="IsEnabled" Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Grid Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Label Content="Input ID" Grid.Column="0" Grid.Row="0"  />
							<TextBox Grid.Column="1" Grid.Row="0" x:Name="inputIdTb" Style="{DynamicResource NameTB}" Text="{Binding selectedInput.id, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Input device ID, you can use letters, numbers and _" />
							<Label Content="Input Type" Grid.Column="0" Grid.Row="1" />
							<Label x:Name="inputTypeLbl" Grid.Column="1" Grid.Row="1" Content="{Binding selectedInput.type}"/>
							<Label Content="Input Address" Grid.Column="0" Grid.Row="2" />
							<TextBox Grid.Column="1" Grid.Row="2" x:Name="inputAddressTb" Style="{DynamicResource NameTB}" Text="{Binding selectedInput.address, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Input Addres in format InputName@127.0.0.1" />
						</Grid>
						<Grid Grid.Row="1" x:Name="trackerInputSettings" >
							<Grid.Style>
								<Style TargetType="{x:Type Grid}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding selectedInput.type}" Value="tracker" >
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="5" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid Grid.Column="0" Grid.Row="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Tracker Location" />
								<Grid Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
									<TextBox x:Name="inputLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="X coordinate in meters, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
									<TextBox x:Name="inputLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Y coordinate in meters, floating point number"/>
									<Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
									<TextBox x:Name="inputLocationZTb" Grid.Column="1" Grid.Row="2"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationZ, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Z coordinate in meters, floating point tnumber"/>
								</Grid>
							</Grid>
							<Grid Grid.Column="0" Grid.Row="3">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Tracker Rotation"/>
								<Grid Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
									<TextBox x:Name="inputRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationP, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Pitch in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
									<TextBox x:Name="inputRotationYTb" Grid.Column="1" Grid.Row="1"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Yaw in degrees, floating point number" />
									<Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
									<TextBox x:Name="inputRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationR, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Roll in degrees, floating point number" />
								</Grid>
							</Grid>
							<Grid Grid.Column="0" Grid.Row="5">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Grid.Row="0" Content="Coordinate system mapping" />
								<Grid Grid.Row="1" Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="37" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Grid.Column="0" Grid.Row="0" Content="Front" ToolTip="Front direction axis" />
									<TextBox x:Name="inputFront" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.front, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Front direction axis" />
									<Label Grid.Column="0" Grid.Row="1" Content="Right" ToolTip="Right direction axis" />
									<TextBox x:Name="inputRight" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.right, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Right direction axis" />
									<Label Grid.Column="0" Grid.Row="2" Content="Up" ToolTip="Up direction axis" />
									<TextBox x:Name="inputUp" Grid.Column="1" Grid.Row="2"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.up, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  ToolTip="Up direction axis" />
								</Grid>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Other settings" IsEnabled="False" Visibility="Collapsed" >
				<Grid Style="{StaticResource TabContent}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="5" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Label Content="Swap sync policy" Grid.Column="0"/>
						<ComboBox x:Name="swapSyncCb" Grid.Column="1" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding swapSyncPolicy}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedItem="{Binding selectedSwapSync}" Width="Auto" />
					</Grid>
					<Grid Grid.Row="2">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="5" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="5" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="5" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Label Content="Stereo settings" Grid.Row="0" />
						<Grid Grid.Row="1" Margin="20,0,0,0" >
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<CheckBox x:Name="eyeSwapCheckBox" Grid.Column="0" Grid.Row="0" Content="Eye Switch" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding eyeSwap}" ToolTip="If unchecked (L|R) &lt;--&gt; if checked (R|L) eye switch" />
							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Label Content="interoccular distance (meters)" Grid.Column="0" ToolTip="Interoccular distance (meters)" />
								<TextBox x:Name="eyeDistTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding eyeDist, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Interoccular distance (meters)" />
							</Grid>
						</Grid>
						<Label Content="Debug settings" Grid.Row="3" />
						<Grid  Grid.Row="4" Margin="20,0,0,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<CheckBox x:Name="drawStatsCheckBox" Grid.Column="0" Grid.Row="0" Content="Draw Stats" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding drawStats}"/>
							<CheckBox x:Name="lagSimulationCheckBox" Grid.Column="0" Grid.Row="1" Content="Lag Simulation" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding lagSimulation}" ToolTip="Enable/disable lag simulation" />
							<Grid Grid.Column="1" Grid.Row="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Label Content="Lag max time" Grid.Column="0" ToolTip="Maximum delay time for randome delay simulation" />
								<TextBox x:Name="lagMaxTimeTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding lagMaxTime, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="aximum delay time for randome delay simulation"/>
							</Grid>
						</Grid>
						<Label Content="Camera settings" Grid.Row="6" />
						<Grid  Grid.Row="7">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Label Content="Camera Location" Grid.Column="0" Grid.Row="0" Margin="20,0,0,0" />
							<Grid Grid.Column="0" Grid.Row="1" Margin="40,0,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="0*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Label Content="X" Grid.Column="0" Grid.Row="0" ToolTip="X coordinate in meters, floating point number" />
								<TextBox Grid.Column="1" Grid.Row="0" x:Name="cameraXtb" Style="{DynamicResource SizeTB}" Text="{Binding cameraLocationX, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="X coordinate in meters, floating point number" />
								<Label Content="Y" Grid.Column="0" Grid.Row="1" ToolTip="Y coordinate in meters, floating point number"  />
								<TextBox Grid.Column="1" Grid.Row="1" x:Name="cameraYtb" Style="{DynamicResource SizeTB}"  Text="{Binding cameraLocationY, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Y coordinate in meters, floating point number" />
								<Label Content="Z" Grid.Column="0" Grid.Row="2" ToolTip="Z coordinate in meters, floating point number"  />
								<TextBox Grid.Column="1" Grid.Row="2" x:Name="cameraZtb" Style="{DynamicResource SizeTB}"  Text="{Binding cameraLocationZ, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="Z coordinate in meters, floating point number" />
							</Grid>

						</Grid>
						<Grid Grid.Row="9" Margin="20,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Label Content="Tracker ID" Grid.Column="0" Grid.Row="0" />
							<ComboBox x:Name="cameraTrackerIDCb" Grid.Column="1" Grid.Row="0" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding Source={StaticResource cvsInputTrackers}}" DisplayMemberPath="id" SelectedItem="{Binding cameraTracker}" />

							<Label Content="Tracker channel" Grid.Column="0" Grid.Row="1" />
							<TextBox x:Name="cameraTrackingChTb" Grid.Row="1" Grid.Column="1" Style="{DynamicResource NameTB}" Text="{Binding cameraTrackerCh, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Log Tools" x:Name="logTab" IsEnabled="False" Visibility="Collapsed">
				<Grid Style="{StaticResource TabContent}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="145" />
							<ColumnDefinition Width="145" />
						</Grid.ColumnDefinitions>
						<Button x:Name="logsFolderBtn" Grid.Column="0" Template="{DynamicResource ButtonTemplate}" Padding="2" HorizontalContentAlignment="Center" Click="logsFolderBtn_Click" ToolTip="Collect logs from all nodes to local folder" >
							<TextBlock TextWrapping="Wrap" TextAlignment="Center" ><Run Text="Collect logs"/></TextBlock>
						</Button>
						<Button x:Name="logsClearBtn" Grid.Column="1" Content="Clear all logs" Template="{DynamicResource ButtonTemplate}" Padding="2"  Click="logsClearBtn_Click" />
					</Grid>
					<Grid Grid.Row="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="100" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<CheckBox x:Name="logsZipCheckBox" Grid.Column="0" Content="Zip Logs" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogZip}" />
						<CheckBox x:Name="logsRemoveCheckBox" Grid.Column="1" Content="Remove files arter Zip" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogRemove}" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisConverter}, ElementName=logsZipCheckBox}" />
					</Grid>
					<Grid Grid.Row="2" >
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<CheckBox x:Name="logOptionsCheckBox" Grid.Row="0" Content="Enable Logging Options" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogEnabled}" />
						<Grid Grid.Row="1" Margin="20,0,0,0" >
							<Grid.Style>
								<Style TargetType="{x:Type Grid}">
									<Setter Property="Visibility" Value="{Binding IsChecked, Converter={StaticResource BoolToVisConverter}, ElementName=logOptionsCheckBox}" />
								</Style>
							</Grid.Style>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Grid Grid.Row="0">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<Grid Grid.Row="0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Label Grid.Column="0"  Content="Log File Name" />
										<TextBox Grid.Column="1"  x:Name="logFileNameTb" Text="{Binding logFile, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource NameTB}" HorizontalAlignment="Stretch" Width="Auto" />
									</Grid>
									<CheckBox x:Name="forceLogCheckBox" Grid.Row="1" Grid.Column="0" Content="Force Log Flush" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isForceLogFlush}" />
								</Grid>
								<Label Grid.Row="1" Content="Log Level Setup"  />
								<ListBox x:Name="logLevelsListBox" Grid.Row="2" Height="260" MinWidth="150" Grid.Column="0" ItemsSource="{Binding logCategories}" MaxWidth="350" ScrollViewer.VerticalScrollBarVisibility="Auto"  >
									<ListBox.ItemTemplate>
										<DataTemplate>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<CheckBox Grid.Column="0" IsChecked="{Binding isChecked}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
												<Label Grid.Column="1" Content="{Binding id}"/>
												<ComboBox Grid.Column="2"  ItemsSource="{Binding Source={StaticResource dataFromEnum}}" Template="{DynamicResource ComboBoxTemplate}" SelectedItem="{Binding value, Mode=TwoWay}" HorizontalAlignment="Right" MaxWidth="95" SelectedIndex="1" SelectionChanged="ComboBox_SelectionChanged" />
											</Grid>
										</DataTemplate>
									</ListBox.ItemTemplate>
									<ListBox.ItemContainerStyle>
										<Style TargetType="{x:Type ListBoxItem}">
											<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
										</Style>
									</ListBox.ItemContainerStyle>
								</ListBox>
							</Grid>
						</Grid>
					</Grid>
					<!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    

                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>-->
					<!--<Button x:Name="logsFolderBtn" Grid.Row="1" Template="{DynamicResource ButtonTemplate}" Width="100" Padding="2" HorizontalContentAlignment="Center" Click="logsFolderBtn_Click" >
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center" ToolTip="Collect logs from all nodes to local folder" Width="100">Collect logs</TextBlock>
                            </Button>
                            <Button x:Name="logsClearBtn" Grid.Row="2" Content="Clear all logs" Template="{DynamicResource ButtonTemplate}" Padding="2" Width="100" Click="logsClearBtn_Click" />-->
					<!--<CheckBox x:Name="logsZipCheckBox" Grid.Row="3" Content="Zip Logs" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogZip}" />
                            <CheckBox x:Name="logsRemoveCheckBox" Grid.Row="4" Content="Remove files arter Zip" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogRemove}" Visibility="{Binding IsChecked, ElementName=logsZipCheckBox, Converter={StaticResource BoolToVisConverter}}" />-->

					<!--</Grid>
                    </Grid>-->
					<!--<Grid Grid.Column="1" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <CheckBox x:Name="logOptionsCheckBox" Grid.Row="0" Content="Enable Logging Options" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="false" />
                        <Grid Grid.Row="1">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="{Binding IsChecked, ElementName=logOptionsCheckBox, Converter={StaticResource BoolToVisConverter}}" />
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Log File Name" />
                                    <TextBox Grid.Column="1" Grid.Row="0" x:Name="logFileNameTb" Text="{Binding logFile}" Style="{DynamicResource NameTB}" />
                                    <CheckBox x:Name="forceLogCheckBox" Grid.Row="1" Grid.Column="0" Content="Force Log Flush" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isForceLogFlush}" />
                                </Grid>
                                <Label Grid.Row="1" Content="Log Level Setup"  />
                                <ListBox x:Name="logLevelsListBox" Grid.Row="2" Height="310" MinWidth="150" Grid.Column="0" ItemsSource="{Binding logCategories}" MaxWidth="350" ScrollViewer.VerticalScrollBarVisibility="Auto"  >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <CheckBox Grid.Column="0" IsChecked="{Binding isChecked}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                                                <Label Grid.Column="1" Content="{Binding id}"/>
                                                <ComboBox Grid.Column="2"  ItemsSource="{Binding Source={StaticResource dataFromEnum}}" Template="{DynamicResource ComboBoxTemplate}" SelectedItem="{Binding value, Mode=TwoWay}" HorizontalAlignment="Right" MaxWidth="95" SelectedIndex="1" SelectionChanged="ComboBox_SelectionChanged" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Grid>
                        </Grid>
                    </Grid>-->
				</Grid>
			</TabItem>
			<TabItem Header="Launcher" x:Name="launcherTab" >
				<Grid Style="{StaticResource TabContent}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Background="#FF1C1C1C">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="3" />
						</Grid.RowDefinitions>
						<Grid Grid.Column="0" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisConverter}, ElementName=showPanelToggle}" >
								<Grid Background="#252527">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

									<StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,5,0">
										<Label Grid.Column="0" Grid.Row="0" Content="Render API" />
										<ComboBox x:Name="renderApi" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding renderApiParams}" SelectedItem="{Binding selectedRenderApiParam}" DisplayMemberPath="Key" Template="{DynamicResource ComboBoxTemplate}" HorizontalAlignment="Stretch" Width="172"/>
									</StackPanel>

									<StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,5,0">
										<Label Grid.Column="0" Grid.Row="0" Content="Render mode" />
										<ComboBox x:Name="renderMode" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding renderModeParams}" SelectedItem="{Binding selectedRenderModeParam}" DisplayMemberPath="Key" Template="{DynamicResource ComboBoxTemplate}" Width="160"/>
									</StackPanel>

									<!--<CheckBox x:Name="runParamsCheckBox" Grid.Row="4" Grid.Column="0" Content="Run With Params" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isRunWithParams}" />-->
									<Grid Grid.Row="2" Margin="0,10,5,0" >
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Label Grid.Column="0" Grid.Row="0" Content="Optional parameters:" />
										<CheckBox x:Name="coresCheckBox" Grid.Row="1" Content="Use All Available Cores" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isUseAllCores}" />
										<CheckBox x:Name="textureStreamingCheckBox" Grid.Row="2" Content="No Texture Streaming" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isNotextureStreaming}" />
										<Label Grid.Row="3" Content="Custom command line arguments:" />
										<TextBox x:Name="commandLineTb" Grid.Row="4" Style="{DynamicResource NameTB}" Width="Auto" Text="{Binding additionalParams, UpdateSourceTrigger=PropertyChanged}" Margin="20,2,2,2" HorizontalAlignment="Stretch" MaxWidth="400" />
									</Grid>
								</Grid>
							</Grid>
							<Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" >

								<ToggleButton x:Name="showPanelToggle" Content="Options" Padding="1" Background="#2D2D30" Foreground="WhiteSmoke" Margin="-15,15,-15,0" RenderTransformOrigin="0.5,0.5" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="50" Height="20" VerticalAlignment="Top" IsChecked="True"  >
									<ToggleButton.Template>
										<ControlTemplate TargetType="{x:Type ButtonBase}">
											<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
												<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="Button.IsDefaulted" Value="True">
													<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
												</Trigger>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Background" TargetName="border" Value="#0079CB"/>
													<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
												</Trigger>
												<Trigger Property="ToggleButton.IsChecked" Value="True">
													<Setter Property="Background" TargetName="border" Value="#0079CB"/>
													<Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
												</Trigger>

											</ControlTemplate.Triggers>
										</ControlTemplate>
									</ToggleButton.Template>
									<ToggleButton.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="90"/>
											<TranslateTransform/>
										</TransformGroup>
									</ToggleButton.RenderTransform>
								</ToggleButton>

							</Grid>
						</Grid>
						<Grid Grid.Column="1" >
							<!--<TabControl Grid.Row="0" TabStripPlacement="Bottom" Background="{x:Null}" BorderThickness="0" Padding="0" Style="{DynamicResource SubTabControlStyle}" Margin="3,0,0,0" Height="285" Panel.ZIndex="-4" >
                                <TabItem Header="Applications" Style="{DynamicResource SubTabItemStyle}" >-->
							<Grid Background="#252527" >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="10" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<!--<RowDefinition Height="*" />-->
									<RowDefinition Height="3" />
								</Grid.RowDefinitions>
								<Grid Grid.Column="0">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="5" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="5" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Label Content="Applications" Grid.Column="0" Grid.Row="0" />
									<ListBox x:Name="applicationsListBox" Height="150" MinWidth="150" Grid.Column="0" Grid.Row="1"  ItemsSource="{Binding applications}" SelectedItem="{Binding selectedApplication}" MaxWidth="780" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="150" UseLayoutRounding="True" ToolTip="List of applications"/>
									<Grid Grid.Row="2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Button Grid.Column="0" x:Name="addAppBtn" Content="Add" Template="{DynamicResource ButtonTemplate}" Click="addAppButton_Click" ToolTip="Add new application to list" />
										<Button Grid.Column="1" x:Name="deleteAppBtn" Content="Delete" Template="{DynamicResource ButtonTemplate}" Click="deleteAppButton_Click" ToolTip="Delete selected  application" />
									</Grid>
									<Grid Grid.Row="4">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Label Content="Config Files" Grid.Column="0" Grid.Row="0"/>
										<ComboBox x:Name="configsCb" Height="Auto" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding configs}" SelectedItem="{Binding selectedConfig}" VerticalAlignment="Top" Template="{DynamicResource ComboBoxTemplate}" DropDownOpened="configsCb_DropDownOpened" Width="Auto" MinWidth="150" MaxWidth="720" ToolTip="Select config file" HorizontalAlignment="Stretch" SelectionChanged="configsCb_SelectionChanged" />
										<Button Grid.Column="2" x:Name="addConfigBtn" Content="Add" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new application to list" Click="addConfigButton_Click" Padding="3,1" />
										<Button Grid.Column="3" x:Name="deleteConfigBtn" Content="Delete" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected  application" Click="deleteConfigButton_Click" Padding="3,1" />
									</Grid>
									<Grid Grid.Row="4">
										<!--<Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" x:Name="addConfigButton" Content="Add" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new application to list" Click="addConfigButton_Click" />
                                                <Button Grid.Column="1" x:Name="deleteConfigButton" Content="Delete" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected  application" Click="deleteConfigButton_Click" />-->

									</Grid>
									<Grid Grid.Row="7">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Label Content="Cameras" Grid.Row="2" Grid.Column="0" />
										<ComboBox x:Name="camerasCb" Height="Auto" Grid.Row="2" Grid.Column="1" ItemsSource="{Binding cameras}" SelectedItem="{Binding selectedCamera}" VerticalAlignment="Top" Template="{DynamicResource ComboBoxTemplate}"  ToolTip="Select camera" />
									</Grid>

								</Grid>

								<Grid Grid.Column="2" Grid.Row="0" >
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>

								</Grid>

							</Grid>
							<!--</TabItem>-->

							<!--<TabItem Header="Active Nodes" Style="{DynamicResource SubTabItemStyle}">
                                    <Grid Background="#252527">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ListBox x:Name="activeNodesListBox" Height="Auto" MinWidth="100" Grid.Row="0" SelectionMode="Multiple" ItemsSource="{Binding activeNodes}" MaxWidth="350" HorizontalAlignment="Left" ToolTip="Active nodes IP addresses list" >
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListBoxItem}" >
                                                        <Setter Property="Content" Value="{Binding key}" />
                                                        <Setter Property="IsSelected" Value="{Binding value}" />
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" x:Name="addActiveNodeBtn" Content="Add" Template="{DynamicResource ButtonTemplate}" Height="19" Margin="2,2,2,0" VerticalAlignment="Top" Click="addActiveNodeButton_Click" ToolTip="Add new  active node address" />
                                                <Button Grid.Column="1" x:Name="deleteActiveNodeBtn" Content="Delete" Template="{DynamicResource ButtonTemplate}" Click="deleteActiveNodeButton_Click" ToolTip="Delete selected active nodes" />
                                            </Grid>
                                        </Grid>

                                    </Grid>
                                </TabItem>-->


							<!--</TabControl>-->
						</Grid>


					</Grid>
					<Grid Grid.Row="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Label Grid.Row="0" Content="Command" />
						<Grid Grid.Row="1" >

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" Margin="3,0,0,0">
								<TextBox x:Name="commandTextBox" Text="{Binding commandLine, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" Background="#3F3F46" MinWidth="300" Margin="5"  ScrollViewer.CanContentScroll="True" Height="64" ScrollViewer.VerticalScrollBarVisibility="Auto" ToolTip="Generated command line" HorizontalAlignment="Stretch" MaxWidth="Infinity" />
							</ScrollViewer>
							<Button x:Name="copyLogBtn" Grid.Column="1" Content="Copy" Template="{DynamicResource ButtonTemplate}" HorizontalAlignment="Left" Width="50" Click="copyLogBtn_Click" Margin="5,0,2,0" ToolTip="Copy command line to bufer" />
						</Grid>

						<Grid Grid.Row="3" VerticalAlignment="Stretch" />
						<Grid Grid.Row="4" VerticalAlignment="Bottom" Margin="0,5">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Button x:Name="runBtn" Content="Run" Grid.Column="0" Template="{DynamicResource ButtonTemplate}" Click="runBtn_Click" FontSize="16" Padding="1,3" ToolTip="Run Application" />
							<Button x:Name="statusBtn" Content="Status" Grid.Column="1" Template="{DynamicResource ButtonTemplate}" Click="statusBtn_Click" FontSize="16" Padding="1,3" ToolTip="Get status of the Application" />
							<Button x:Name="killBtn" Content="Kill" Grid.Column="2" Template="{DynamicResource ButtonTemplate}" Click="killBtn_Click" FontSize="16" Padding="1,3" ToolTip="Kill current application" />
						</Grid>
					</Grid>
				</Grid>
			</TabItem>

		</TabControl>
		<!--<DockPanel Grid.Row="2">
            <TextBlock MinHeight="100" Width="740" ><Run Text="Log window here"/></TextBlock>
        </DockPanel>-->
		<DockPanel x:Name="logContainer" Grid.Row="2" HorizontalAlignment="Stretch" LastChildFill="true" Margin="10,5">
			<StackPanel Width="Auto" DockPanel.Dock="Right">
				<Button Grid.Column="0" x:Name="copyAppLogBtn" Content="Copy" Width="100" Template="{DynamicResource ButtonTemplate}" ToolTip="Copy application log to Buffer" Click="copyAppLogBtn_Click" />
				<Button Grid.Column="1" x:Name="cleanAppLogBtn" Content="Clean" Width="100" Template="{DynamicResource ButtonTemplate}" ToolTip="Clean log" Click="cleanAppLogBtn_Click" />
			</StackPanel>
			<ScrollViewer  Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=ActualHeight, Converter={StaticResource SizeConverter}, ConverterParameter=550}" uictrl:AutoScroller.AutoScroll="True" >
				<TextBox x:Name="appLogTextBox" IsReadOnly="True" Text="{Binding Log, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True" CaretIndex="{x:Static sys:Int32.MaxValue}" Foreground="White" ToolTip="Log Window" HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto" MaxWidth="Infinity" MinWidth="200"  />
			</ScrollViewer>
		</DockPanel>
	</Grid>
</Window>